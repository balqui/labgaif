
Several AGraph methods in PyGraphviz use self.__class__ to 
construct e. g. a subgraph. The init of this class will fail 
if AGraph is subclassed and a custom __init__() is provided
for the subclass.

The reason is that the class would not be anymore AGraph but the 
subclass, and then the __init__() called is not the AGraph one. 
However the source code of PyGraphviz expects AGraph.__init__()
being called there, and strange errors appear.

As we are indeed subclassing AGraph in this project, that's 
why we were having trouble in various forms with our custom
__init__(). We must make do with no custom __init__() so that
creations fall back on AGraph.__init__() and have a separate
initialization process.

See:

https://github.com/pygraphviz/pygraphviz/issues/363



About the graph attributes:

Default for directed is False; right now True won't work out well.
Must find out why, probably some edge is referred to inverted.

Then directed = True at the constructing call works and is seen as
dtree.directed, and actually anything truthy will do, even the 
string "false" - however, self.directed = True at setup does not work.

Then compound = "true" and newrank = "true" work both at the 
constructing call and within setup; for compound both True and
"true" work (not sure for newrank).



JLB, Aug 14th, 2022


(Aug 15th: discussion continues, see URL above. Considering 
an intermediate class for DecompTree that could be supported 
either through pygraphviz or through graphviz. Current 
understanding should now allow me to properly __init__() 
class DecompTree on PyGraphviz though: trying that.)
